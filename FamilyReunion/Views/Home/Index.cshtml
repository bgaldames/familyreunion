@section SPAViews {
    @Html.Partial("_Home")
}
@section Scripts{
    <script async defer src="https://apis.google.com/js/api.js"
            onload="this.onload=function(){};handleClientLoad()"
            onreadystatechange="if (this.readyState === 'complete') this.onload()">
    </script>
    <button id="authorize-button" style="display: none;">Authorize</button>
    <button id="signout-button" style="display: none;">Sign Out</button>

<pre id="content"></pre>
    <script type="text/javascript">
        // Client ID and API key from the Developer Console
        var CLIENT_ID = '989682649564-s1f9t9j1ovl3nq0i5lulj6kq4tk7lrib.apps.googleusercontent.com';

        // Array of API discovery doc URLs for APIs used by the quickstart
        var DISCOVERY_DOCS = ["https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest"];

        // Authorization scopes required by the API; multiple scopes can be
        // included, separated by spaces.
        var SCOPES = "https://www.googleapis.com/auth/calendar";

        var authorizeButton = document.getElementById('authorize-button');
        var signoutButton = document.getElementById('signout-button');

        /**
         *  On load, called to load the auth2 library and API client library.
         */
        function handleClientLoad() {
            gapi.load('client:auth2', initClient);
        }

        /**
         *  Initializes the API client library and sets up sign-in state
         *  listeners.
         */
        function initClient() {
            gapi.client.init({
                discoveryDocs: DISCOVERY_DOCS,
                apiKey: 'AIzaSyAXTVhiJUk_VjFxLWvSvPJfbAPrU5da2iU',
                clientId: CLIENT_ID,
                scope: SCOPES
            }).then(function () {
                listUpcomingEvents()
            });
        }

    
        /**
         * Append a pre element to the body containing the given message
         * as its text node. Used to display the results of the API call.
         *
         * @@param {string} message Text to be placed in pre element.
         */
        function appendPre(message) {
            var pre = document.getElementById('content');
            var textContent = document.createTextNode(message + '\n');
            pre.appendChild(textContent);
        }

        /**
         * Print the summary and start datetime/date of the next ten events in
         * the authorized user's calendar. If no events are found an
         * appropriate message is printed.
         */
        function listUpcomingEvents() {
            gapi.client.calendar.events.list({
                'calendarId': 'tt59slhpv2nl6k8dch36u9cpj0@group.calendar.google.com' //'qh7a8qlu8kcmiqu8t7i3hdq3kk@group.calendar.google.com',
                //'timeMin': (new Date()).toISOString(),
                //'timeMax': (new Date()).toISOString(),
                //'showDeleted': false,
                //'singleEvents': true,
                //'maxResults': 10,
                //'orderBy': 'startTime', 
            }).then(function (response) {
                var events = response.result.items;
                appendPre('Upcoming events:');

                if (events.length > 0) {
                    for (i = 0; i < events.length; i++) {
                        var event = events[i];
                        var when = event.start.dateTime;
                        if (!when) {
                            when = event.start.date;
                        }
                        appendPre(event.summary + ' (' + when + ')')
                    }
                } else {
                    appendPre('No upcoming events found.');
                }
            });
        }

    </script>

    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/app")
}